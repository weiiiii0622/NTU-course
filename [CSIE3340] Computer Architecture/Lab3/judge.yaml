# Directory of source code
source:
  path: code/src

# Directory of supplied code
supplied:
  path: code/supplied

# Directory of built code
# The directory will be created if it does not exist
# Before judging, the judger will clean the directory
build:
  path: build

log:
  path: log

# Test case config
# The judger will find all test cases in the directory
tasks:
  path: testcases
  format:
    input: instruction_<tasks::format::index>.txt
    expect: output_<tasks::format::index>.txt
    index: "[0-9]+"

# Compile config
# The judger does compilation before judging
# If the compilation fails, the judger will return a compile error
setup:
  timeout: 60
  commands:
    - iverilog -o cpu <supplied::path>/*.v <source::path>/*.v

# Judge config
# For each test case, the judger does judging after execution0
# If the judging fails, the test case fails
process:
  timeout: 60
  commands:
    - cp <input> instruction.txt
    - vvp ./cpu
    - cp output.txt <log::path>/output_<id>.txt
    - cp waveform.vcd <log::path>/waveform_<id>.vcd
    - diff output.txt <expect>